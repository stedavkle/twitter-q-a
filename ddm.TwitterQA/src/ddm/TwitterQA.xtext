

// automatically generated by Xtext
grammar ddm.TwitterQA with org.eclipse.xtext.common.Terminals

import "platform:/resource/TwitterQA_emf/model/TwitterQA.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TwitterQA returns TwitterQA:
	'TwitterQA'
	'{'
		'consumer_key' 'is' consumer_key=EString
		'consumer_secret' 'is' consumer_secret=EString
		'access_token' 'is' access_token=EString
		'access_token_secret' 'is' access_token_secret=EString
		'welcome_msg' 'is' welcome_msg=EString
		'games' 'are' '[' games+=Game ( "," games+=Game)* ']' 
		'locations' 'are' '[' locations+=Location ( "," locations+=Location)* ']' 
	'}';

EString returns ecore::EString:
	STRING | ID;

Game returns Game:
	'Game'
	name=EString
	'{'
		'description' 'is' description=EString
		'city' 'is' city=EString
		'initial_test' 'is' initial_test=Test
		'tests' 'are' '[' tests+=Test ( "," tests+=Test)* ']' 
	'}';

Location returns Location:
	'Location'
	name=EString
	'{'
		'latitude' 'is' latitude=EDouble
		'longitude' 'is' longitude=EDouble
	'}';

Test returns Test:
	'Test'
	name=EString
	'{'
		'question' 'is' question=EString
		'order' 'is' order=EInt
		'answers' 'are' '[' answers+=EString ( "," answers+=EString)* ']' 
		('hints' 'are' '[' hints+=EString ( "," hints+=EString)* ']' )?
		'timelimit' 'is' timelimit=EInt
		'attempts' 'is' attempts=EInt
		'reward' 'is' reward=EInt
		'location' 'is' location=[Location|EString]
		('on_correct' 'is' on_correct=[Test|EString])?
		('on_timeout' 'is' on_timeout=[Test|EString])?
		('on_fail' 'is' on_fail=[Test|EString])?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;
